image: python:3.6

stages:
  - validate
  - lint
  - build
  - generate_docker_image_push_to_nexus

include:
  - project: piedpiper/validation
    file: .gitlab-ci.yml
  - project: piedpiper/style
    file: .gitlab-ci.yml


variables:
  SONAR_URL: "$SONAR_URL"
  SONAR_LOGIN: "$SONAR_LOGIN"
  MAJOR_VERSION: "2"
  MINOR_VERSION: "0"
  SERVICE_VERSION: "${MAJOR_VERSION}.${CI_PIPELINE_ID}.${CI_JOB_ID}"
  DOCKER_REGISTRY_AT_NEXUS: "$DOCKER_REGISTRY_AT_NEXUS"
  DOCKER_REGISTRY_USER: "$DOCKER_REGISTRY_USER"
  DOCKER_REGISTRY_PASSWORD: "$DOCKER_REGISTRY_PASSWORD"
  APP_NAME: "demo-os-python-app"
  OCP_URL: "$OCP_URL"
  OCP_TOKEN : "$OCP_TOKEN"
  OCP_PROJECT : "$OCP_PROJECT"
  OCP_IMAGE_STREAM : ${APP_NAME}-${OCP_PROJECT}


before_script:
  - echo `pwd` # debug
  - echo "$CI_BUILD_NAME, $CI_BUILD_REF_NAME $CI_BUILD_STAGE" # debug
  - echo "$CI_JOB_NAME"  #debug ${CI_JOB_ID}''
  - echo "$CI_JOB_ID"  #debug
  - echo "$SERVICE_VERSION"  #debug


cache:
  # o enable per-branch and per-stage caching
  key: "$CI_JOB_NAME-$CI_COMMIT_REF_SLUG"

build:
  stage: build
  script:
    - git checkout ${GIT_BRANCH}
    - git pull origin master
    - python3 -m venv env
    - source ./env/bin/activate
    - pip install flask pytest-xdist pytest-cov nose coverage requests pylint
    - source ./env/bin/activate
    - pytest --junitxml=build/reports/tests/test_results.xml test
    - coverage run --source=source -m pytest test
    - coverage report
    - coverage xml
  artifacts:
    paths:
      - build/reports/tests/**
    reports:
      junit: build/reports/**/*.xml

generate_docker_image_push_to_nexus:
  stage: generate_docker_image_push_to_nexus
  script:
    - docker build -t ${DOCKER_REGISTRY_AT_NEXUS}/${APP_NAME}:${SERVICE_VERSION} --build-arg VERSION=${SERVICE_VERSION} --build-arg VERSION=${SERVICE_VERSION} -f docker/Dockerfile .
    - docker images   #for debugging
    - docker login -u ${DOCKER_REGISTRY_USER} -p ${DOCKER_REGISTRY_PASSWORD} ${DOCKER_REGISTRY_AT_NEXUS}
    - docker push ${DOCKER_REGISTRY_AT_NEXUS}/${APP_NAME}:${SERVICE_VERSION}
    - oc login --insecure-skip-tls-verify ${OCP_URL} --token=${OCP_TOKEN}
    - oc project ${OCP_PROJECT}
    # apply latest tag
    - oc tag -n ${OCP_PROJECT} --insecure=true --reference-policy='local' ${DOCKER_REGISTRY_AT_NEXUS}/${APP_NAME}:${SERVICE_VERSION} ${OCP_IMAGE_STREAM}:release

    #If you don't want to use the ImageStream trigger, you can use the below listed commands to deploy the latest tag to an environment
    #Please Note: You will need to remove the ImageStream trigger from your deployment config
    #- oc -n ${OCP_PROJECT} rollout latest dc/${OCP_IMAGE_STREAM}
    #- oc rollout history dc/${APP_NAME}
